services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD}@${DB_HOST:-db}:${DB_PORT:-5433}/${DB_DATABASE:-tgeld}?schema=public
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5433}
      - DB_DATABASE=${DB_DATABASE:-tgeld}
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: sh -c "npm run dev -- -H 0.0.0.0"
    labels:
      - "com.tgeld.service=app"
      - "com.tgeld.environment=development"

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE:-tgeld}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - type: volume
        source: postgres_dev_data
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_DATABASE:-tgeld}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    labels:
      - "com.tgeld.service=database"
      - "com.tgeld.environment=development"

volumes:
  postgres_dev_data:
    labels:
      - "com.tgeld.data=postgres"
      - "com.tgeld.environment=development"
      - "com.tgeld.backup=required"
